@using DTO

<div class="row">
    <div class="col-sm-6">
        <h3>Shopping List</h3>

        <p>Number of recipes: @recipes.Count()</p>

        <button class="btn btn-primary btn-sm" @onclick="@CreateRecipe">Create Recipe</button>

        @if (recipes.Any())
        {
            <button class="btn btn-primary btn-sm" @onclick="@GenerateShoppingList">Generate Shopping List</button>
        }

        @if (shoppingIngredients.Any())
        {
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Shopping Ingredients</h4>
                    <table class="table table-sm table-striped">
                        <thead>
                            <tr>
                                <th>Type</th>
                                <th>Amount</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var ingredient in shoppingIngredients)
                            {
                                <tr>
                                    <td>@ingredient.Type</td>
                                    <td>@ingredient.Amount</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }

        @foreach (var recipe in recipes)
        {
            <Recipe CurrentRecipe="@recipe"></Recipe>
        }
    </div>
</div>

@code {
    List<RecipeDto> recipes = new List<RecipeDto>();
    List<IngredientDto> shoppingIngredients = new List<IngredientDto>();

    void CreateRecipe()
    {
        recipes.Add(new RecipeDto());
    }

    void GenerateShoppingList()
    {
        var ingredients = new List<IngredientDto>();
        foreach (var recipe in recipes)
        {
            ingredients.AddRange(recipe.Ingredients);
        }

        shoppingIngredients = ingredients.GroupBy(x => x.Type)
                                        .Select(x => new IngredientDto()
                                        {
                                            Type = x.Key,
                                            Amount = x.Sum(y => y.Amount)
                                        })
                                        .ToList();
    }
}
